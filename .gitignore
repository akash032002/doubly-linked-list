#include <iostream>
#include <bits/stdc++.h>
using namespace std;
class Node{

public:
int data;
Node*next;
Node*prev;
Node(int data){
  this->prev=NULL;
  this->data=data;
  this->next=NULL;
  }
  ~Node(){
    int k=data;
   if(next!=NULL){
     delete next;
     next=NULL;
   } 
  cout<<"Memory is free for node with data "<<k<<endl;
}
};
// insertion from front
void inserttohead(Node*&head,int d){
  Node*temp=new Node(d);
  temp->next=head;
  temp->next->prev=temp;
  head=temp;
}
// insertion from back
void inserttotail(Node*&tail,int d){
  Node*temp=new Node(d);
  temp->prev=tail;
  tail->next=temp;
  tail=temp;
}
// insertion from anywhere
void insertanywhere(Node*&head,int position,int d){
  if(position==1){
  inserttohead(head,d);
    return;
  }
 Node*temp=head;
  int count=1;
  while(count<position-1){
    temp=temp->next;
    count++;
  }
  Node*nodetoinsert=new Node(d);
  nodetoinsert->prev=temp;
  nodetoinsert->next=temp->next;
  temp->next=nodetoinsert;
}
// deletion of the number
void deletenode(int position,Node* &head){
  if(position==1){
    Node*temp=head;
    temp->next->prev=NULL;
    head=temp->next;
    temp->next=NULL;
    
    delete temp;
  }
  else{
    Node*curr=head;
    Node*prev=NULL;
    int count=1;
    while(count<position){
      prev=curr;
      curr=curr->next;
      count++;
    }
      curr->prev=NULL;
   prev->next=curr->next;
    curr->next=NULL;
 delete curr; 

  }

  }
// printing all the numbers
void print(Node*&head){
  Node*temp=head;

  while(temp!=NULL){
    cout<<temp->data<<" ";
    temp=temp->next;
  }cout<<endl;
}

int main() {
Node*node1=new Node(8);
  
 Node*head=node1;
 Node*tail=node1;

  
inserttohead(head,56);
  print(head);

  inserttotail(tail,89);
    print(head);

  insertanywhere(head,2,69);
    print(head);

  deletenode(4,head);
 print(head);
}
